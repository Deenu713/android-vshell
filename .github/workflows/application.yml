name: Application
on:
  push:
    paths:
      - app/**
      - gradle/**
      - gradle*
      - native-packages/packages/**
      - ./*.gradle
  workflow_dispatch:

jobs:
  gradle-wrapper-check:
    name: Validate Gradle wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Validation
        uses: gradle/wrapper-validation-action@v1
  terminal-tests:
    name: Run unit tests for terminal emulator
    needs: gradle-wrapper-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Testing terminal emulator library
        run: ./gradlew test
  build-jni:
    name: Build JNI library
    needs: terminal-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cpu_arch: [aarch64]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        env:
          VSHELL_BUILDENV_IMAGE_NAME: "docker.pkg.github.com/${{ github.repository }}/native-packages-buildenv:latest"
        run: |
          cd native-packages
          find ./jniLibs -type f -delete
          ./scripts/run-docker.sh ./build-package.sh -a ${{ matrix.cpu_arch }} qemu-system
      - name: Store JNI library artifacts
        uses: actions/upload-artifact@v2
        with:
          name: jni-libs-${{ github.sha }}
          path: native-packages/jniLibs/*/*.so
          retention-days: 1
  build-debug:
    name: Build debug APK
    needs: build-jni
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download JNI library artifacts
        uses: actions/download-artifact@v2
        with:
          name: jni-libs-${{ github.sha }}
          path: native-packages/jniLibs
      - name: Build
        run: |
          ./gradlew assembleDebug
          mkdir -p artifacts
          mv ./app/build/outputs/apk/debug/*.apk ./artifacts/
      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: vshell-debug-${{ github.sha }}
          path: ./artifacts/*.apk
          retention-days: 7
  build-release:
    name: Build release APK
    needs: build-jni
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download JNI library artifacts
        uses: actions/download-artifact@v2
        with:
          name: jni-libs-${{ github.sha }}
          path: native-packages/jniLibs
      - name: Build
        env:
          KEY_PASSPHRASE: ${{ secrets.KEY_PASSPHRASE }}
        run: |
          ./gradlew assembleRelease
          mkdir -p artifacts
          mv ./app/build/outputs/apk/release/vshell-*-universal-release.apk ./artifacts/
      - name: Publish release
        uses: fnkr/github-action-ghr@v1.3
        env:
          GHR_PATH: artifacts/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
